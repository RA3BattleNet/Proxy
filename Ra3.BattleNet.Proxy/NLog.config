<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Info"
      internalLogFile="${currentdir}/internal-nlog-Proxy.txt">

  <!-- the targets to write to -->
  <targets>
    <!-- File Target for own log messages with extra web details using some ASP.NET core renderers -->
    <target xsi:type="File" name="allFile"
            fileName="${currentdir}/logs/nlog-Proxy.log"
            archiveFileName="${currentdir}/logs/nlog-Proxy.{##}.log"
            layout="${longdate}|${logger}|${event-properties:item=EventId:whenEmpty=0}|${level:uppercase=true}|${message} ${exception:format=tostring}"
            archiveNumbering="Sequence" maxArchiveFiles="10" archiveAboveSize="4000000" />

    <!-- File Target for own log messages with extra web details in JSON -->
    <target xsi:type="File" name="jsonFile" fileName="${currentdir}/logs/nlog-Proxy.json"
            archiveFileName="${currentdir}/logs/nlog-Ra3BattleNet-Proxy.{#}.json"
            archiveNumbering="Sequence" maxArchiveFiles="3" archiveAboveSize="2000000" >
      <layout type="JsonLayout">
        <attribute name="logger" layout="${logger}" />
        <attribute name="time" layout="${longdate}" />
        <attribute name="level" layout="${level}" />
        <attribute name="message" layout="${message}" />
        <attribute name="exception" layout="${exception:format=tostring}" />
        <attribute name="eventProperties" encode="false" >
          <layout type='JsonLayout' includeEventProperties="true"  maxRecursionLimit="2"/>
        </attribute>
      </layout>
    </target>

    <!--Console Target for hosting lifetime messages to improve Docker / Visual Studio startup detection -->
    <target xsi:type="Console" name="lifetimeConsole" layout="${MicrosoftConsoleLayout}" />
  </targets>

  <variable name="FileLogLevel" value="Debug" />
  <variable name="ConsoleLogLevel" value="Off" />
  <!-- rules to map from logger name to target -->
  <rules>
    <logger name="*" minlevel="${var:FileLogLevel}" writeTo="allfile, jsonFile" />
    <logger name="*" minlevel="${var:ConsoleLogLevel}" writeTo="lifetimeConsole" />
  </rules>
</nlog>